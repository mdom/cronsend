#!/usr/bin/perl

use strict;
use warnings;

use Email::Abstract;
use Email::Sender::Simple qw(sendmail);
use File::Temp 'tempfile';
use File::Copy 'move';
use Encode qw(encode_utf8 encode);
use open ':locale';
use Cwd 'abs_path';

our $VERSION = '1.0';

my $script = abs_path($0);

my $mode = shift || '';

my %config = read_config();

if ( $mode eq 'update' ) {
    update();
}
elsif ( $mode eq 'mail' ) {
    my $file = shift;
    usage() if !$file;
    mail($file);
}
else {
    usage();
}

exit 0;

sub usage {
    warn "Usage: \n";
    warn "  cronsend update\n";
    warn "  cronsend mail FILE\n";
    exit 1;
}

sub read_config {
    my %config = (
        user      => 'root',
        mail_dir  => '/etc/cronsend',
        cron_file => '/etc/cron.d/cronsend',
    );
    my $conf_file = '/etc/cronsendrc';
    if ( -r $conf_file ) {
        open( my $fh, '<', $conf_file )
          or die "Can't read config file $conf_file: $!\n";
        while (<$fh>) {
            s/#.*$//;
            $config{$1} = $2 if /^(.*?)\s*=\s*(.*)$/;

        }
    }
    return %config;
}

sub update {
    opendir( my $dh, $config{mail_dir} )
      or die "Can't open mail dir $config{mail_dir}\n";

    my ( $fh, $tempfile ) = tempfile;
    while ( readdir $dh ) {
        next if /^\.\.?/;
        next if !/\.mail$/;

        my $file = "$config{mail_dir}/$_";

        my $mail  = create_mail($file);
        my @crons = $mail->get_header('X-Cron');

        for my $cron (@crons) {
            print {$fh} "$cron $config{user} $script mail $file\n";
        }
    }
    close($fh);
    move( $tempfile, $config{cron_file} )
      or die "Can't move $tempfile to $config{cron_file}: $!\n";
    return;
}

sub mail {
    my $file = shift;
    my $mail = create_mail($file);

    ## remove X-Cron header
    $mail->set_header('X-Cron');

    ## Encode mail
    $mail->set_header(
        'Subject' => encode( 'MIME-Header', $mail->get_header('Subject') ) );
    $mail->set_header( 'Content-Transfer-Encoding' => '8bit' );
    $mail->set_header( 'Content-Type' => 'text/plain; charset="UTF-8"' );
    $mail->set_header( 'MIME-Version' => '1.0' );
    $mail->set_body( encode_utf8( $mail->get_body ) );

    ## Handle bcc
    my @recipients;
    push @recipients, $mail->get_header('Bcc'), $mail->get_header('Cc'),
      $mail->get_header('To');
    $mail->set_header('Bcc');

    sendmail( $mail, { to => \@recipients } );
    return;
}

sub create_mail {
    my $file = shift;
    open( my $fh, '<', $file )
      or die "Can't open mail $config{mail_dir}/$_\n";
    my $text = do { local ($/); <$fh> };
    return Email::Abstract->new($text);
}
